# GraphMind Complete Stack
# Docker Compose for GraphMind with all services including MCP, Ollama, and SearXNG

version: '3.8'

services:
  # GraphMind Core Services
  graphmind-rag:
    build:
      context: .
      dockerfile: config/Dockerfile
    image: graphmind-rag:latest
    container_name: graphmind-rag
    # No external ports - internal only
    environment:
      - FRONTEND_DOMAIN=${FRONTEND_DOMAIN:-emini.riffyx.com}
      - REDIS_URL=redis://redis:6379
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
      - OLLAMA_BASE_URL=http://ollama:11434
      - SEARXNG_URL=http://searxng:8080
      - MCP_ENABLED=true
      - MCP_DOCKER_SOCKET=/var/run/docker.sock
    volumes:
      - ./documents:/workspace/documents
      - ./memory:/app/memory
      - ./config:/app/config
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./obsidian_vault:/app/obsidian_vault
    depends_on:
      - redis
      - chromadb
      - ollama
      - searxng
    networks:
      - graphmind-network
    restart: unless-stopped

  # Frontend
  graphmind-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: graphmind-frontend:latest
    container_name: graphmind-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://graphmind-rag:8000
      - NEXT_PUBLIC_FRONTEND_DOMAIN=${FRONTEND_DOMAIN:-emini.riffyx.com}
    depends_on:
      - graphmind-rag
    networks:
      - graphmind-network
    restart: unless-stopped

  # ChromaDB Vector Database
  chromadb:
    image: chromadb/chroma:latest
    container_name: graphmind-chromadb
    # No external ports - internal only
    volumes:
      - chromadb_data:/chroma/chroma
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
    networks:
      - graphmind-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: graphmind-redis
    # No external ports - internal only
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - graphmind-network
    restart: unless-stopped

  # Ollama LLM Service
  ollama:
    build:
      context: .
      dockerfile: Dockerfile.ollama
    image: graphmind-ollama:latest
    container_name: graphmind-ollama
    ports:
      - "11434:11434"  # Expose Ollama API internally
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    networks:
      - graphmind-network
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # SearXNG Web Search
  searxng:
    image: searxng/searxng:latest
    container_name: graphmind-searxng
    # No external ports - internal only
    volumes:
      - ./searxng:/etc/searxng
      - searxng_data:/var/log/searxng
    environment:
      - SEARXNG_BASE_URL=http://localhost:8080
    networks:
      - graphmind-network
    restart: unless-stopped

  # SearXNG Redis (for SearXNG)
  searxng-redis:
    image: valkey/valkey:8-alpine
    container_name: graphmind-searxng-redis
    # No external ports - internal only
    volumes:
      - searxng_redis_data:/data
    command: valkey-server --appendonly yes
    networks:
      - graphmind-network
    restart: unless-stopped

  # Obsidian MCP Server
  obsidian-mcp:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    image: graphmind-obsidian-mcp:latest
    container_name: graphmind-obsidian-mcp
    # No external ports - internal only
    volumes:
      - ./obsidian_vault:/app/obsidian_vault
      - ./config/domains:/app/config/domains
    environment:
      - MCP_SERVER_PORT=8081
      - OBSIDIAN_VAULT_PATH=/app/obsidian_vault
      - GRAPHMINDSERVER_URL=http://graphmind-rag:8000
    depends_on:
      - graphmind-rag
    networks:
      - graphmind-network
    restart: unless-stopped

  # Docker MCP Server
  docker-mcp:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    image: graphmind-docker-mcp:latest
    container_name: graphmind-docker-mcp
    # No external ports - internal only
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config/domains:/app/config/domains
    environment:
      - MCP_SERVER_PORT=8082
      - MCP_SERVER_TYPE=docker
      - GRAPHMINDSERVER_URL=http://graphmind-rag:8000
    depends_on:
      - graphmind-rag
    networks:
      - graphmind-network
    restart: unless-stopped

  # Filesystem MCP Server
  filesystem-mcp:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    image: graphmind-filesystem-mcp:latest
    container_name: graphmind-filesystem-mcp
    # No external ports - internal only
    volumes:
      - ./documents:/app/documents
      - ./config:/app/config
      - ./memory:/app/memory
    environment:
      - MCP_SERVER_PORT=8083
      - MCP_SERVER_TYPE=filesystem
      - FILESYSTEM_ROOT_PATH=/app
      - GRAPHMINDSERVER_URL=http://graphmind-rag:8000
    depends_on:
      - graphmind-rag
    networks:
      - graphmind-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: graphmind-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - graphmind-frontend
      - graphmind-rag
      - searxng
    networks:
      - graphmind-network
    restart: unless-stopped

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: graphmind-prometheus
    # No external ports - internal only
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - graphmind-network
    restart: unless-stopped

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: graphmind-grafana
    # No external ports - internal only
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - graphmind-network
    restart: unless-stopped

volumes:
  chromadb_data:
  redis_data:
  ollama_data:
  searxng_data:
  searxng_redis_data:
  prometheus_data:
  grafana_data:

networks:
  graphmind-network:
    driver: bridge
