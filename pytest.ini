[pytest]
# Pytest configuration for GraphMind test suite

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output and reporting
addopts =
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --cov=app
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-report=term-missing:skip-covered
    --cov-fail-under=95
    -ra

# Test markers
markers =
    unit: Unit tests for individual components
    integration: Integration tests for API endpoints and services
    e2e: End-to-end tests for complete user workflows
    performance: Performance and load tests
    slow: Tests that take longer than 5 seconds
    auth: Authentication and authorization tests
    rag: RAG system tests
    web: Web search tests
    obsidian: Obsidian integration tests
    memory: Memory system tests
    chat: Chat system tests
    prompt: System prompt tests
    model: Model selection and LLM tests
    cache: Caching system tests
    
# Coverage settings
[coverage:run]
source = app
omit =
    */tests/*
    */venv/*
    */__pycache__/*
    */migrations/*
    app/__init__.py

[coverage:report]
precision = 2
show_missing = True
skip_covered = False

exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
    
[coverage:html]
directory = htmlcov

# Timeout for long tests
timeout = 300

# Parallel execution
[pytest-xdist]
looponfail = True

