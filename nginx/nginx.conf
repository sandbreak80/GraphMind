# GraphMind Nginx Configuration
# Reverse proxy configuration for GraphMind services

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Large file upload support (400MB)
    client_max_body_size 400M;
    client_body_buffer_size 128k;
    client_body_timeout 300s;
    
    # Proxy timeouts for large uploads
    proxy_connect_timeout 300s;
    proxy_send_timeout 300s;
    proxy_read_timeout 300s;
    send_timeout 300s;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=web:10m rate=30r/s;
    
    # Upstream servers with health checks and connection pooling
    upstream graphmind_frontend {
        server graphmind-frontend:3000;
        keepalive 16;
    }
    
    upstream graphmind_api {
        server graphmind-rag:8000;
        keepalive 32;  # Connection pool for better performance
    }
    
    upstream searxng {
        server searxng:8080;
    }
    
    upstream ollama {
        server ollama:11434;
    }
    
    upstream obsidian_mcp {
        server obsidian-mcp:8081;
    }
    
    upstream docker_mcp {
        server docker-mcp:8082;
    }
    
    upstream filesystem_mcp {
        server filesystem-mcp:8083;
    }
    
    upstream prometheus {
        server prometheus:9090;
    }
    
    upstream grafana {
        server grafana:3000;
    }
    
    # DNS resolver for dynamic service resolution
    resolver 127.0.0.11 valid=5s ipv6=off;  # Docker's internal DNS, 5s TTL
    
    # Main server block
    server {
        listen 80;
        server_name ${FRONTEND_DOMAIN} *.${FRONTEND_DOMAIN};
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # Direct backend upload endpoint for large files (bypasses frontend)
        location /api/documents/upload {
            limit_req zone=api burst=5 nodelay;
            proxy_pass http://graphmind_api/upload;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Large file upload optimization
            client_max_body_size 400M;
            client_body_buffer_size 128k;
            proxy_request_buffering off;  # Stream directly, don't buffer
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }
        
        # Frontend
        location / {
            limit_req zone=web burst=20 nodelay;
            proxy_pass http://graphmind_frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        
        # API is NOT exposed externally - internal only (except /upload above)
        # Frontend communicates with API internally via Docker network
        
        # Backend services are NOT exposed externally
        # All backend communication happens internally through the API
        
        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Static files caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
    
    # HTTPS server block - DISABLED (SSL handled by external reverse proxy)
    # If you need SSL termination at nginx level, uncomment and add certificates
    # server {
    #     listen 443 ssl http2;
    #     server_name ${FRONTEND_DOMAIN} *.${FRONTEND_DOMAIN};
    #     
    #     # SSL configuration
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 10m;
    #     
    #     # Security headers
    #     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    #     add_header X-Frame-Options "SAMEORIGIN" always;
    #     add_header X-Content-Type-Options "nosniff" always;
    #     add_header X-XSS-Protection "1; mode=block" always;
    #     add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    #     
    #     # Direct backend upload endpoint for large files (bypasses frontend)
    #     location /api/documents/upload {
    #         limit_req zone=api burst=5 nodelay;
    #         proxy_pass http://graphmind_api/upload;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #         
    #         # Large file upload optimization
    #         client_max_body_size 400M;
    #         client_body_buffer_size 128k;
    #         proxy_request_buffering off;  # Stream directly, don't buffer
    #         proxy_http_version 1.1;
    #         proxy_set_header Connection "";
    #     }
    #     
    #     # Same location blocks as HTTP server
    #     location / {
    #         limit_req zone=web burst=20 nodelay;
    #         proxy_pass http://graphmind_frontend;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #         
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection "upgrade";
    #     }
    #     
    #     # API is NOT exposed externally - internal only (except /upload above)
    #     # Frontend communicates with API internally via Docker network
    #     
    #     # Backend services are NOT exposed externally
    #     # All backend communication happens internally through the API
    #     
    #     location /health {
    #         access_log off;
    #         return 200 "healthy\n";
    #         add_header Content-Type text/plain;
    #     }
    #     
    #     location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
    #         expires 1y;
    #         add_header Cache-Control "public, immutable";
    #     }
    # }
}